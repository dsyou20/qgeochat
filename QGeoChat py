# -*- coding: utf-8 -*-
"""
/***************************************************************************
 QGeoChat
                                 A QGIS plugin
 QGIS Ollama
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2025-03-02
        git sha              : $Format:%H$
        copyright            : (C) 2025 by dsyou / elcomtech
        email                : dsyou20@gmail,com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
import os.path

from qgis.PyQt.QtCore import QSettings, QTranslator, QCoreApplication, Qt
from qgis.PyQt.QtGui import QIcon
from qgis.PyQt.QtWidgets import QAction
from qgis.core import QgsProject

from .QGeoChat_dockwidget import QQGeoChatDockWidget

class QGeoChat:
    """QGIS Plugin Implementation."""

    def __init__(self, iface):
        """Constructor.

        :param iface: QGIS 인터페이스 객체
        :type iface: QgsInterface
        """
        # QGIS 인터페이스 저장
        self.iface = iface
        self.plugin_dir = os.path.dirname(__file__)

        # 로케일 설정 초기화
        locale = QSettings().value('locale/userLocale')[0:2]
        locale_path = os.path.join(
            self.plugin_dir,
            'i18n',
            'QGeoChat_{}.qm'.format(locale))

        if os.path.exists(locale_path):
            self.translator = QTranslator()
            self.translator.load(locale_path)
            QCoreApplication.installTranslator(self.translator)

        # UI 요소 선언
        self.actions = []
        self.menu = self.tr(u'&QGeoChat')
        self.toolbar = self.iface.addToolBar(u'QGeoChat')
        self.toolbar.setObjectName(u'QGeoChat')

        self.pluginIsActive = False
        self.dockwidget = None

    def tr(self, message):
        """메시지 번역 지원

        :param message: 번역할 문자열
        :type message: str
        :returns: 번역된 문자열
        :rtype: str
        """
        return QCoreApplication.translate('QGeoChat', message)

    def add_action(
        self,
        icon_path,
        text,
        callback,
        enabled_flag=True,
        add_to_menu=True,
        add_to_toolbar=True,
        status_tip=None,
        whats_this=None,
        parent=None):
        """툴바/메뉴에 아이콘 추가"""

        icon = QIcon(icon_path)
        action = QAction(icon, text, parent)
        action.triggered.connect(callback)
        action.setEnabled(enabled_flag)

        if status_tip is not None:
            action.setStatusTip(status_tip)

        if whats_this is not None:
            action.setWhatsThis(whats_this)

        if add_to_toolbar:
            self.toolbar.addAction(action)

        if add_to_menu:
            self.iface.addPluginToMenu(
                self.menu,
                action)

        self.actions.append(action)

        return action

    def initGui(self):
        """QGIS GUI 초기화"""
        icon_path = os.path.join(self.plugin_dir, 'icon.png')
        self.add_action(
            icon_path,
            text=self.tr(u'QGeoChat'),
            callback=self.run,
            parent=self.iface.mainWindow())



    def unload(self):
        """플러그인 제거 시 정리 작업"""
        for action in self.actions:
            self.iface.removePluginMenu(
                self.tr(u'&QGeoChat'),
                action)
            self.iface.removeToolBarIcon(action)
        del self.toolbar

    def run(self):
        """QGIS 플러그인 실행"""
        if not self.pluginIsActive:
            self.pluginIsActive = True

            if self.dockwidget == None:
                # 도크위젯 생성
                self.dockwidget = QGeoChatDockWidget(self.iface.mainWindow())
                # 도크위젯을 메인 윈도우의 오른쪽에 추가
                self.iface.addDockWidget(Qt.RightDockWidgetArea, self.dockwidget)
                # 도크위젯 너비를 부모 윈도우의 1/3로 설정
                self.iface.mainWindow().resizeDocks(
                    [self.dockwidget], 
                    [self.iface.mainWindow().width() // 3], 
                    Qt.Horizontal
                )
                # 도크위젯 종료 시 처리
                self.dockwidget.closingPlugin.connect(self.onClosePlugin)
        else:
            # 이미 활성화된 경우 도크위젯 표시
            if self.dockwidget:
                self.dockwidget.show()

    def onClosePlugin(self):
        """플러그인 종료 시 정리 작업"""
        self.dockwidget.closingPlugin.disconnect(self.onClosePlugin)
        self.pluginIsActive = False
